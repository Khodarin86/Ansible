version: "3.9"

services:
  drone:
    image: drone/drone:2
    container_name: 'drone'
    environment:
      - DRONE_GITEA_SERVER=https://{{ git_hname }}
      - DRONE_GITEA_CLIENT_ID=468f779f-0332-4704-90bc-031e1d6c46b3
      - DRONE_GITEA_CLIENT_SECRET=gto_sfcpuddyiwhbdnnchrmwlmxh2s6u3mycufypwbrvsbpfbjf7td7q
      - DRONE_RPC_SECRET=vo0SxUPAVGikilFNEDkMed8obmwZQpwp
      - DRONE_SERVER_HOST={{ ci_hname }}
      - DRONE_SERVER_PROTO=https
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://{{ db_user }}:{{ db_pass }}@{{ db_host }}:5432/{{ db_ci }}?sslmode=disable
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_USER_CREATE=username:darkman,admin:true
      - TZ=Europe/Moscow
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.constraint-label=traefik-net

        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.drone-http.rule=Host(`{{ ci_hname }}`)
        - traefik.http.routers.drone-http.entrypoints=http
        - traefik.http.routers.drone-http.middlewares=https-redirect
        - traefik.http.routers.drone-https.rule=Host(`{{ ci_hname }}`)
        - traefik.http.routers.drone-https.entrypoints=https
        - traefik.http.routers.drone-https.tls=true
        - traefik.http.routers.drone-https.tls.certresolver=le
        - traefik.http.services.drone.loadbalancer.server.port=80
    networks:
      - drone
      - traefik-net
    restart: always

  runner:
    image: drone/drone-runner-docker:1
    environment:
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_HOST={{ ci_hname }}
      - DRONE_RPC_SECRET=vo0SxUPAVGikilFNEDkMed8obmwZQpwp
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=docker
      - DRONE_RUNNER_NETWORKS=drone
      - TZ=Europe/Moscow
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: global
    networks:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

networks:
  drone:
    name: drone
    driver: overlay
    attachable: true

  traefik-net:
    external: true
